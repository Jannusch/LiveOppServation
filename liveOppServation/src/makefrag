#
# Copyright (C) 2017 Rudolf Hornig <rudi@omnetpp.org>
#
# Documentation for these modules is at http://veins.car2x.org/
#
# SPDX-License-Identifier: GPL-2.0-or-later
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#

#
# on windows we have to link with the ws2_32 (winsock2) library as it is no longer added to the omnetpp system libraries by default (as of OMNeT++ 5.1)
# copied from INET Framework (inet-3.6.0) makefrag
#
ifeq ($(PLATFORM),win32.x86_64)
  LIBS += -lws2_32
  DEFINES += -DliveOppServation_EXPORT
  ENABLE_AUTO_IMPORT=-Wl,--enable-auto-import
  LDFLAGS := $(filter-out $(ENABLE_AUTO_IMPORT), $(LDFLAGS))
endif

liveOppServation_NEED_MSG6 := $(shell echo ${OMNETPP_VERSION} | grep "^5" >/dev/null 2>&1; echo $$?)
ifeq ($(liveOppServation_NEED_MSG6),0)
  MSGCOPTS += --msg6
endif

# Local install paths.
INSTALL_DIR := $(abspath ../../install)
PROTOC      := $(INSTALL_DIR)/bin/protoc
# Configuration required to use gRPC.
CXXFLAGS     += --std=c++20
INCLUDE_PATH += -I $(INSTALL_DIR)/include
LIBS         += $(LDFLAG_LIBPATH)$(INSTALL_DIR)/lib -Wl,-rpath,$(INSTALL_DIR)/lib -lgrpc++
	

# Protobuf source files and the objects generated from their C++ implementation.
# `sort` is used to remove duplicate object targets added by rerunning `configure` after make has
PROTOFILES := $(subst ./,,$(strip $(call opp_rwildcard, ./, *.proto)))
OBJS       := $(sort $(OBJS) $(PROTOFILES:%.proto=$O/%.pb.o) $(PROTOFILES:%.proto=$O/%.grpc.pb.o))

# Ensure that `all` remains the default target.
all:
# C++ source files may include protobuf headers, so those have to be generated first.
$(OBJS): protoheaders
# Generate C++ implementation for protobuf files.
# See https://grpc.io/docs/languages/cpp/basics.
%.pb.cc %.pb.h %.grpc.pb.cc %.grpc.pb.h &: %.proto
	$(qecho) PROTOC: $<
	@$(PROTOC) --cpp_out=. $< \
	&& $(PROTOC) --grpc_out=. --plugin=protoc-gen-grpc=$(INSTALL_DIR)/bin/grpc_cpp_plugin $<
protoheaders: $(PROTOFILES:.proto=.pb.h) $(PROTOFILES:.proto=.grpc.pb.h)
# Delete source files generated by protobuf when cleaning.
clean: clean-protobuf
clean-protobuf:
	$(Q)-rm -f $(call opp_rwildcard, ./, *.pb.cc *.pb.h)
.PHONY: clean-protobuf protoheaders